name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1'
        os:
          - ubuntu-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - name: "Setup Private Registry"
        shell: julia --color=yes {0}
        run: |
          import Pkg
          import Pkg.Registry: RegistrySpec
          ENV["JULIA_PKG_SERVER"] = ""
          Pkg.Registry.add("General")
          Pkg.Registry.add(RegistrySpec(url="https://DrHenryArmitage:${{ secrets.CI_TOKEN }}@github.com/Happy-Diode/Miskatonic.git"))
      - uses: julia-actions/julia-buildpkg@v1
      - name: "run tests"
        run: julia --color=yes --check-bounds=yes --project -e 'using Pkg; Pkg.develop(url="https://DrHenryArmitage:${{ secrets.CI_TOKEN }}@github.com/Happy-Diode/GraphTensorNetworks.jl"); Pkg.test(; coverage=true)'
      - uses: julia-actions/julia-processcoverage@v1
      - uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }}
          parallel: true
          path-to-lcov: lcov.info

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: '1'

      - name: Run Pluto notebooks
        run: julia -e 'using Pkg;
            Pkg.add("PlutoUI");
            Pkg.activate("notebooks");
            Pkg.instantiate();
            Pkg.develop(path=".");
            using PlutoSliderServer;
            for file in readdir("notebooks")
              endswith(file, ".jl") && PlutoSliderServer.export_notebook(joinpath("notebooks", file))
            end
            '
      - name: Deploy to gh-pages
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            BRANCH: gh-pages
            FOLDER: .

  finish:
      name: Coveralls Finished
      needs: test
      runs-on: ubuntu-latest
      steps:
        - uses: coverallsapp/github-action@master
          with:
            github-token: ${{ secrets.GITHUB_TOKEN }}
            parallel-finished: true
